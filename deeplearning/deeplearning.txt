畳み込みニューラルネットワークによるテキスト分類を TensorFlow で実装する
http://tkengo.github.io/blog/2016/03/14/text-classification-by-cnn/

WordEmbeddingにはword2vecを採用
word2vecはテキストをニューラルネットワークが理解可能な数値形式(要するにベクトル)に変換するもの
https://deeplearning4j.org/ja/word2vec

CNN(畳み込みニューラルネットワーク)を適用していく方針

NLP(自然言語処理)へのCNN適用について
http://tkengo.github.io/blog/2016/03/11/understanding-convolutional-neural-networks-for-nlp/

インプットデータ作成について
http://resola.ai/dev/2016/08/07/%E3%83%87%E3%82%A3%E3%83%BC%E3%83%97%E3%83%A9%E3%83%BC%E3%83%8B%E3%83%B3%E3%82%B0%E3%81%A7%E6%96%87%E6%9B%B8%E5%88%86%E9%A1%9E%EF%BC%88%EF%BC%92%EF%BC%89/

GIGAZINEの記事をPythonでスクレイピング
http://testpy.hatenablog.com/entry/2016/10/02/004711

インプットデータがどのカテゴリのものかラベル付けするには、ディレクトリに従ったラベルの対応付をすればよい(らしい)
実際にtensorflowのMNISTやcifar10ではラベルとインプットデータは別々に存在する
	mnist.train.labels がラベル
	sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})
ここで、batch_xsが画像でbatch_ysがラベルに相当する

実際に実装した人のソース
https://github.com/tkengo/tf/tree/master/cnn_text_classification


MeCabをMacにインストールする手順
https://qiita.com/nkjm/items/913584c00af199794257

MecabをUbuntu14.0.4にインストールして実行してみる
https://foolean.net/p/22

Word2VecをPythonでやってみる
https://foolean.net/p/71

Doc2Vecの仕組みとgensimを使った文書類似度算出チュートリアル
https://deepage.net/machine_learning/2017/01/08/doc2vec.html

Python で「老人と海」を word2vec する
https://m0t0k1ch1st0ry.com/blog/2016/08/28/word2vec/

Python で word2vec を使ってみる
http://mayo.hatenablog.com/entry/2014/07/11/111432